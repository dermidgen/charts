apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "hadoop.fullname" . }}-hive-nn
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/hadoop-configmap.yaml") . | sha256sum }}
  labels:
    app: {{ template "hadoop.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: hive-nn
spec:
  serviceName: {{ template "hadoop.fullname" . }}-hive-nn
  replicas: {{ .Values.hive.dataNode.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "hadoop.name" . }}
        release: {{ .Release.Name }}
        component: hive-nn
    spec:
      # Use hostNetwork so datanodes connect to namenode without going through an overlay network
      # like weave. Otherwise, namenode fails to see physical IP address of datanodes.
      # hostNetwork: true
      # hostPID: true
      # dnsPolicy: ClusterFirstWithHostNet
      affinity:
        podAntiAffinity:
        {{- if eq .Values.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app:  {{ template "hadoop.name" . }}
                release: {{ .Release.Name | quote }}
                component: hive-nn
        {{- else if eq .Values.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app:  {{ template "hadoop.name" . }}
                  release: {{ .Release.Name | quote }}
                  component: hive-nn
        {{- end }}
      terminationGracePeriodSeconds: 0
      containers:
      - name: hive-nn
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
           - "/bin/bash"
           - "/tmp/hadoop-config/bootstrap.sh"
           - "-d"
        env:
          {{- range $key, $value := .Values.customHadoopConfig }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}
        ports:
          - containerPort: 10000
        resources:
{{ toYaml .Values.hive.dataNode.resources | indent 10 }}
        readinessProbe:
          tcpSocket:
            port: 10000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 10000
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: hadoop-config
          mountPath: /tmp/hadoop-config
      restartPolicy: Always
      volumes:
      - name: hadoop-config
        configMap:
          name: {{ template "hadoop.fullname" . }}
